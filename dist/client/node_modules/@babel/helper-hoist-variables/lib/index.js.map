{"version":3,"sources":["../../../../../../client/node_modules/@babel/helper-hoist-variables/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_default","t","data","_interopRequireWildcard","require","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","visitor","Scope","path","state","kind","skip","Function","VariableDeclaration","node","nodes","declarations","firstId","declar","id","init","push","expressionStatement","assignmentExpression","keys","getBindingIdentifiers","name","emit","identifier","parentPath","isFor","left","replaceWith","replaceWithMultiple","traverse"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction t() {\n  const data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst visitor = {\n  Scope(path, state) {\n    if (state.kind === \"let\") path.skip();\n  },\n\n  Function(path) {\n    path.skip();\n  },\n\n  VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n    const nodes = [];\n    const declarations = path.get(\"declarations\");\n    let firstId;\n\n    for (const declar of declarations) {\n      firstId = declar.node.id;\n\n      if (declar.node.init) {\n        nodes.push(t().expressionStatement(t().assignmentExpression(\"=\", declar.node.id, declar.node.init)));\n      }\n\n      for (const name of Object.keys(declar.getBindingIdentifiers())) {\n        state.emit(t().identifier(name), name, declar.node.init !== null);\n      }\n    }\n\n    if (path.parentPath.isFor({\n      left: path.node\n    })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n\n};\n\nfunction _default(path, emit, kind = \"var\") {\n  path.traverse(visitor, {\n    kind,\n    emit\n  });\n}"]}