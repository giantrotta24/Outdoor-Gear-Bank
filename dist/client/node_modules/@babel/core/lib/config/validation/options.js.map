{"version":3,"sources":["../../../../../../../../client/node_modules/@babel/core/lib/config/validation/options.js"],"names":["Object","defineProperty","exports","value","validate","_plugin","_interopRequireDefault","require","_removed","_optionAssertions","obj","__esModule","default","ROOT_VALIDATORS","cwd","assertString","root","rootMode","assertRootMode","configFile","assertConfigFileSearch","caller","assertCallerMetadata","filename","filenameRelative","code","assertBoolean","ast","envName","BABELRC_VALIDATORS","babelrc","babelrcRoots","assertBabelrcSearch","NONPRESET_VALIDATORS","extends","ignore","assertIgnoreList","only","COMMON_VALIDATORS","inputSourceMap","assertInputSourceMap","presets","assertPluginList","plugins","passPerPreset","env","assertEnvSet","overrides","assertOverridesList","test","assertConfigApplicableTest","include","exclude","retainLines","comments","shouldPrintComment","assertFunction","compact","assertCompact","minified","auxiliaryCommentBefore","auxiliaryCommentAfter","sourceType","assertSourceType","wrapPluginVisitorMethod","highlightCode","sourceMaps","assertSourceMaps","sourceMap","sourceFileName","sourceRoot","getModuleId","moduleRoot","moduleIds","moduleId","parserOpts","assertObject","generatorOpts","getSource","loc","type","source","parent","opts","validateNested","assertNoDuplicateSourcemap","keys","forEach","optLoc","name","key","Error","msg","validator","throwUnknownError","message","version","ReferenceError","unknownOptErr","has","prototype","hasOwnProperty","call","access","envLoc","arr","assertArray","entries","index","item","objLoc","overridesLoc"],"mappings":"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","file":"options.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _removed = _interopRequireDefault(require(\"./removed\"));\n\nvar _optionAssertions = require(\"./option-assertions\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst ROOT_VALIDATORS = {\n  cwd: _optionAssertions.assertString,\n  root: _optionAssertions.assertString,\n  rootMode: _optionAssertions.assertRootMode,\n  configFile: _optionAssertions.assertConfigFileSearch,\n  caller: _optionAssertions.assertCallerMetadata,\n  filename: _optionAssertions.assertString,\n  filenameRelative: _optionAssertions.assertString,\n  code: _optionAssertions.assertBoolean,\n  ast: _optionAssertions.assertBoolean,\n  envName: _optionAssertions.assertString\n};\nconst BABELRC_VALIDATORS = {\n  babelrc: _optionAssertions.assertBoolean,\n  babelrcRoots: _optionAssertions.assertBabelrcSearch\n};\nconst NONPRESET_VALIDATORS = {\n  extends: _optionAssertions.assertString,\n  ignore: _optionAssertions.assertIgnoreList,\n  only: _optionAssertions.assertIgnoreList\n};\nconst COMMON_VALIDATORS = {\n  inputSourceMap: _optionAssertions.assertInputSourceMap,\n  presets: _optionAssertions.assertPluginList,\n  plugins: _optionAssertions.assertPluginList,\n  passPerPreset: _optionAssertions.assertBoolean,\n  env: assertEnvSet,\n  overrides: assertOverridesList,\n  test: _optionAssertions.assertConfigApplicableTest,\n  include: _optionAssertions.assertConfigApplicableTest,\n  exclude: _optionAssertions.assertConfigApplicableTest,\n  retainLines: _optionAssertions.assertBoolean,\n  comments: _optionAssertions.assertBoolean,\n  shouldPrintComment: _optionAssertions.assertFunction,\n  compact: _optionAssertions.assertCompact,\n  minified: _optionAssertions.assertBoolean,\n  auxiliaryCommentBefore: _optionAssertions.assertString,\n  auxiliaryCommentAfter: _optionAssertions.assertString,\n  sourceType: _optionAssertions.assertSourceType,\n  wrapPluginVisitorMethod: _optionAssertions.assertFunction,\n  highlightCode: _optionAssertions.assertBoolean,\n  sourceMaps: _optionAssertions.assertSourceMaps,\n  sourceMap: _optionAssertions.assertSourceMaps,\n  sourceFileName: _optionAssertions.assertString,\n  sourceRoot: _optionAssertions.assertString,\n  getModuleId: _optionAssertions.assertFunction,\n  moduleRoot: _optionAssertions.assertString,\n  moduleIds: _optionAssertions.assertBoolean,\n  moduleId: _optionAssertions.assertString,\n  parserOpts: _optionAssertions.assertObject,\n  generatorOpts: _optionAssertions.assertObject\n};\n\nfunction getSource(loc) {\n  return loc.type === \"root\" ? loc.source : getSource(loc.parent);\n}\n\nfunction validate(type, opts) {\n  return validateNested({\n    type: \"root\",\n    source: type\n  }, opts);\n}\n\nfunction validateNested(loc, opts) {\n  const type = getSource(loc);\n  assertNoDuplicateSourcemap(opts);\n  Object.keys(opts).forEach(key => {\n    const optLoc = {\n      type: \"option\",\n      name: key,\n      parent: loc\n    };\n\n    if (type === \"preset\" && NONPRESET_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in preset options`);\n    }\n\n    if (type !== \"arguments\" && ROOT_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options`);\n    }\n\n    if (type !== \"arguments\" && type !== \"configfile\" && BABELRC_VALIDATORS[key]) {\n      if (type === \"babelrcfile\" || type === \"extendsfile\") {\n        throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in .babelrc or \"extends\"ed files, only in root programmatic options, ` + `or babel.config.js/config file options`);\n      }\n\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options, or babel.config.js/config file options`);\n    }\n\n    const validator = COMMON_VALIDATORS[key] || NONPRESET_VALIDATORS[key] || BABELRC_VALIDATORS[key] || ROOT_VALIDATORS[key] || throwUnknownError;\n    validator(optLoc, opts[key]);\n  });\n  return opts;\n}\n\nfunction throwUnknownError(loc) {\n  const key = loc.name;\n\n  if (_removed.default[key]) {\n    const {\n      message,\n      version = 5\n    } = _removed.default[key];\n    throw new ReferenceError(`Using removed Babel ${version} option: ${(0, _optionAssertions.msg)(loc)} - ${message}`);\n  } else {\n    const unknownOptErr = `Unknown option: ${(0, _optionAssertions.msg)(loc)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`;\n    throw new ReferenceError(unknownOptErr);\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction assertNoDuplicateSourcemap(opts) {\n  if (has(opts, \"sourceMap\") && has(opts, \"sourceMaps\")) {\n    throw new Error(\".sourceMap is an alias for .sourceMaps, cannot use both\");\n  }\n}\n\nfunction assertEnvSet(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside of another .env block`);\n  }\n\n  const parent = loc.parent;\n  const obj = (0, _optionAssertions.assertObject)(loc, value);\n\n  if (obj) {\n    for (const envName of Object.keys(obj)) {\n      const env = (0, _optionAssertions.assertObject)((0, _optionAssertions.access)(loc, envName), obj[envName]);\n      if (!env) continue;\n      const envLoc = {\n        type: \"env\",\n        name: envName,\n        parent\n      };\n      validateNested(envLoc, env);\n    }\n  }\n\n  return obj;\n}\n\nfunction assertOverridesList(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .env block`);\n  }\n\n  if (loc.parent.type === \"overrides\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .overrides block`);\n  }\n\n  const parent = loc.parent;\n  const arr = (0, _optionAssertions.assertArray)(loc, value);\n\n  if (arr) {\n    for (const [index, item] of arr.entries()) {\n      const objLoc = (0, _optionAssertions.access)(loc, index);\n      const env = (0, _optionAssertions.assertObject)(objLoc, item);\n      if (!env) throw new Error(`${(0, _optionAssertions.msg)(objLoc)} must be an object`);\n      const overridesLoc = {\n        type: \"overrides\",\n        index,\n        parent\n      };\n      validateNested(overridesLoc, env);\n    }\n  }\n\n  return arr;\n}"]}