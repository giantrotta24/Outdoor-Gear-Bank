{"version":3,"sources":["../../../../../../../../client/node_modules/@babel/core/lib/config/validation/option-assertions.js"],"names":["Object","defineProperty","exports","value","msg","access","assertRootMode","assertSourceMaps","assertCompact","assertSourceType","assertCallerMetadata","assertInputSourceMap","assertString","assertFunction","assertBoolean","assertObject","assertArray","assertIgnoreList","assertConfigApplicableTest","assertConfigFileSearch","assertBabelrcSearch","assertPluginList","loc","type","parent","name","index","JSON","stringify","Error","undefined","obj","keys","prop","propLoc","Array","isArray","arr","forEach","item","i","assertIgnoreItem","RegExp","checkValidTest","assertPluginItem","length","assertPluginTarget","opts"],"mappings":"AAAA;;;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,GAAR,GAAcA,GAAd;AACAF,QAAQG,MAAR,GAAiBA,MAAjB;AACAH,QAAQI,cAAR,GAAyBA,cAAzB;AACAJ,QAAQK,gBAAR,GAA2BA,gBAA3B;AACAL,QAAQM,aAAR,GAAwBA,aAAxB;AACAN,QAAQO,gBAAR,GAA2BA,gBAA3B;AACAP,QAAQQ,oBAAR,GAA+BA,oBAA/B;AACAR,QAAQS,oBAAR,GAA+BA,oBAA/B;AACAT,QAAQU,YAAR,GAAuBA,YAAvB;AACAV,QAAQW,cAAR,GAAyBA,cAAzB;AACAX,QAAQY,aAAR,GAAwBA,aAAxB;AACAZ,QAAQa,YAAR,GAAuBA,YAAvB;AACAb,QAAQc,WAAR,GAAsBA,WAAtB;AACAd,QAAQe,gBAAR,GAA2BA,gBAA3B;AACAf,QAAQgB,0BAAR,GAAqCA,0BAArC;AACAhB,QAAQiB,sBAAR,GAAiCA,sBAAjC;AACAjB,QAAQkB,mBAAR,GAA8BA,mBAA9B;AACAlB,QAAQmB,gBAAR,GAA2BA,gBAA3B;;AAEA,SAASjB,GAAT,CAAakB,GAAb,EAAkB;AAChB,UAAQA,IAAIC,IAAZ;AACE,SAAK,MAAL;AACE;;AAEF,SAAK,KAAL;AACE,aAAUnB,IAAIkB,IAAIE,MAAR,CAAV,eAAkCF,IAAIG,IAAtC;;AAEF,SAAK,WAAL;AACE,aAAUrB,IAAIkB,IAAIE,MAAR,CAAV,mBAAuCF,IAAII,KAA3C;;AAEF,SAAK,QAAL;AACE,aAAUtB,IAAIkB,IAAIE,MAAR,CAAV,SAA6BF,IAAIG,IAAjC;;AAEF,SAAK,QAAL;AACE,aAAUrB,IAAIkB,IAAIE,MAAR,CAAV,SAA6BG,KAAKC,SAAL,CAAeN,IAAIG,IAAnB,CAA7B;;AAEF;AACE,YAAM,IAAII,KAAJ,sCAA6CP,IAAIC,IAAjD,CAAN;AAjBJ;AAmBD;;AAED,SAASlB,MAAT,CAAgBiB,GAAhB,EAAqBG,IAArB,EAA2B;AACzB,SAAO;AACLF,UAAM,QADD;AAELE,cAFK;AAGLD,YAAQF;AAHH,GAAP;AAKD;;AAED,SAAShB,cAAT,CAAwBgB,GAAxB,EAA6BnB,KAA7B,EAAoC;AAClC,MAAIA,UAAU2B,SAAV,IAAuB3B,UAAU,MAAjC,IAA2CA,UAAU,QAArD,IAAiEA,UAAU,iBAA/E,EAAkG;AAChG,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,uEAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASI,gBAAT,CAA0Be,GAA1B,EAA+BnB,KAA/B,EAAsC;AACpC,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,SAAxC,IAAqDA,UAAU,QAA/D,IAA2EA,UAAU,MAAzF,EAAiG;AAC/F,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,4DAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASK,aAAT,CAAuBc,GAAvB,EAA4BnB,KAA5B,EAAmC;AACjC,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,SAAxC,IAAqDA,UAAU,MAAnE,EAA2E;AACzE,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,gDAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASM,gBAAT,CAA0Ba,GAA1B,EAA+BnB,KAA/B,EAAsC;AACpC,MAAIA,UAAU2B,SAAV,IAAuB3B,UAAU,QAAjC,IAA6CA,UAAU,QAAvD,IAAmEA,UAAU,aAAjF,EAAgG;AAC9F,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,oEAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASO,oBAAT,CAA8BY,GAA9B,EAAmCnB,KAAnC,EAA0C;AACxC,MAAM4B,MAAMhB,aAAaO,GAAb,EAAkBnB,KAAlB,CAAZ;;AAEA,MAAI4B,GAAJ,EAAS;AACP,QAAI,OAAOA,IAAI,MAAJ,CAAP,KAAuB,QAA3B,EAAqC;AACnC,YAAM,IAAIF,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,wDAAN;AACD;;AAHM;AAAA;AAAA;;AAAA;AAKP,2BAAmBtB,OAAOgC,IAAP,CAAYD,GAAZ,CAAnB,8HAAqC;AAAA,YAA1BE,IAA0B;;AACnC,YAAMC,UAAU7B,OAAOiB,GAAP,EAAYW,IAAZ,CAAhB;AACA,YAAM9B,SAAQ4B,IAAIE,IAAJ,CAAd;;AAEA,YAAI9B,UAAS,IAAT,IAAiB,OAAOA,MAAP,KAAiB,SAAlC,IAA+C,OAAOA,MAAP,KAAiB,QAAhE,IAA4E,OAAOA,MAAP,KAAiB,QAAjG,EAA2G;AACzG,gBAAM,IAAI0B,KAAJ,CAAazB,IAAI8B,OAAJ,CAAb,iEAAN;AACD;AACF;AAZM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaR;;AAED,SAAO/B,KAAP;AACD;;AAED,SAASQ,oBAAT,CAA8BW,GAA9B,EAAmCnB,KAAnC,EAA0C;AACxC,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,SAAxC,KAAsD,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,IAA6B,CAACA,KAApF,CAAJ,EAAgG;AAC9F,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,8CAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASS,YAAT,CAAsBU,GAAtB,EAA2BnB,KAA3B,EAAkC;AAChC,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,QAA5C,EAAsD;AACpD,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,qCAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASU,cAAT,CAAwBS,GAAxB,EAA6BnB,KAA7B,EAAoC;AAClC,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,UAA5C,EAAwD;AACtD,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,uCAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASW,aAAT,CAAuBQ,GAAvB,EAA4BnB,KAA5B,EAAmC;AACjC,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,SAA5C,EAAuD;AACrD,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,sCAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASY,YAAT,CAAsBO,GAAtB,EAA2BnB,KAA3B,EAAkC;AAChC,MAAIA,UAAU2B,SAAV,KAAwB,QAAO3B,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,IAA6BgC,MAAMC,OAAN,CAAcjC,KAAd,CAA7B,IAAqD,CAACA,KAA9E,CAAJ,EAA0F;AACxF,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,sCAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASa,WAAT,CAAqBM,GAArB,EAA0BnB,KAA1B,EAAiC;AAC/B,MAAIA,SAAS,IAAT,IAAiB,CAACgC,MAAMC,OAAN,CAAcjC,KAAd,CAAtB,EAA4C;AAC1C,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,qCAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASc,gBAAT,CAA0BK,GAA1B,EAA+BnB,KAA/B,EAAsC;AACpC,MAAMkC,MAAMrB,YAAYM,GAAZ,EAAiBnB,KAAjB,CAAZ;;AAEA,MAAIkC,GAAJ,EAAS;AACPA,QAAIC,OAAJ,CAAY,UAACC,IAAD,EAAOC,CAAP;AAAA,aAAaC,iBAAiBpC,OAAOiB,GAAP,EAAYkB,CAAZ,CAAjB,EAAiCD,IAAjC,CAAb;AAAA,KAAZ;AACD;;AAED,SAAOF,GAAP;AACD;;AAED,SAASI,gBAAT,CAA0BnB,GAA1B,EAA+BnB,KAA/B,EAAsC;AACpC,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,UAA9C,IAA4D,EAAEA,iBAAiBuC,MAAnB,CAAhE,EAA4F;AAC1F,UAAM,IAAIb,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,qEAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASe,0BAAT,CAAoCI,GAApC,EAAyCnB,KAAzC,EAAgD;AAC9C,MAAIA,UAAU2B,SAAd,EAAyB,OAAO3B,KAAP;;AAEzB,MAAIgC,MAAMC,OAAN,CAAcjC,KAAd,CAAJ,EAA0B;AACxBA,UAAMmC,OAAN,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AACzB,UAAI,CAACG,eAAeJ,IAAf,CAAL,EAA2B;AACzB,cAAM,IAAIV,KAAJ,CAAazB,IAAIC,OAAOiB,GAAP,EAAYkB,CAAZ,CAAJ,CAAb,wCAAN;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAI,CAACG,eAAexC,KAAf,CAAL,EAA4B;AACjC,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,6DAAN;AACD;;AAED,SAAOnB,KAAP;AACD;;AAED,SAASwC,cAAT,CAAwBxC,KAAxB,EAA+B;AAC7B,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,UAA9C,IAA4DA,iBAAiBuC,MAApF;AACD;;AAED,SAASvB,sBAAT,CAAgCG,GAAhC,EAAqCnB,KAArC,EAA4C;AAC1C,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,SAAxC,IAAqD,OAAOA,KAAP,KAAiB,QAA1E,EAAoF;AAClF,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAH,6DAAkEK,KAAKC,SAAL,CAAezB,KAAf,CAAlE,CAAV,CAAN;AACD;;AAED,SAAOA,KAAP;AACD;;AAED,SAASiB,mBAAT,CAA6BE,GAA7B,EAAkCnB,KAAlC,EAAyC;AACvC,MAAIA,UAAU2B,SAAV,IAAuB,OAAO3B,KAAP,KAAiB,SAA5C,EAAuD,OAAOA,KAAP;;AAEvD,MAAIgC,MAAMC,OAAN,CAAcjC,KAAd,CAAJ,EAA0B;AACxBA,UAAMmC,OAAN,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AACzB,UAAI,CAACG,eAAeJ,IAAf,CAAL,EAA2B;AACzB,cAAM,IAAIV,KAAJ,CAAazB,IAAIC,OAAOiB,GAAP,EAAYkB,CAAZ,CAAJ,CAAb,wCAAN;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAI,CAACG,eAAexC,KAAf,CAAL,EAA4B;AACjC,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAH,kGAAuGK,KAAKC,SAAL,CAAezB,KAAf,CAAvG,CAAV,CAAN;AACD;;AAED,SAAOA,KAAP;AACD;;AAED,SAASkB,gBAAT,CAA0BC,GAA1B,EAA+BnB,KAA/B,EAAsC;AACpC,MAAMkC,MAAMrB,YAAYM,GAAZ,EAAiBnB,KAAjB,CAAZ;;AAEA,MAAIkC,GAAJ,EAAS;AACPA,QAAIC,OAAJ,CAAY,UAACC,IAAD,EAAOC,CAAP;AAAA,aAAaI,iBAAiBvC,OAAOiB,GAAP,EAAYkB,CAAZ,CAAjB,EAAiCD,IAAjC,CAAb;AAAA,KAAZ;AACD;;AAED,SAAOF,GAAP;AACD;;AAED,SAASO,gBAAT,CAA0BtB,GAA1B,EAA+BnB,KAA/B,EAAsC;AACpC,MAAIgC,MAAMC,OAAN,CAAcjC,KAAd,CAAJ,EAA0B;AACxB,QAAIA,MAAM0C,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAM,IAAIhB,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,6BAAN;AACD;;AAED,QAAInB,MAAM0C,MAAN,GAAe,CAAnB,EAAsB;AACpB,YAAM,IAAIhB,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,6CAAN;AACD;;AAEDwB,uBAAmBzC,OAAOiB,GAAP,EAAY,CAAZ,CAAnB,EAAmCnB,MAAM,CAAN,CAAnC;;AAEA,QAAIA,MAAM0C,MAAN,GAAe,CAAnB,EAAsB;AACpB,UAAME,OAAO5C,MAAM,CAAN,CAAb;;AAEA,UAAI4C,SAASjB,SAAT,IAAsBiB,SAAS,KAA/B,KAAyC,QAAOA,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,IAA4BZ,MAAMC,OAAN,CAAcW,IAAd,CAArE,CAAJ,EAA+F;AAC7F,cAAM,IAAIlB,KAAJ,CAAazB,IAAIC,OAAOiB,GAAP,EAAY,CAAZ,CAAJ,CAAb,6CAAN;AACD;AACF;;AAED,QAAInB,MAAM0C,MAAN,KAAiB,CAArB,EAAwB;AACtB,UAAMpB,OAAOtB,MAAM,CAAN,CAAb;;AAEA,UAAIsB,SAASK,SAAT,IAAsB,OAAOL,IAAP,KAAgB,QAA1C,EAAoD;AAClD,cAAM,IAAII,KAAJ,CAAazB,IAAIC,OAAOiB,GAAP,EAAY,CAAZ,CAAJ,CAAb,qCAAN;AACD;AACF;AACF,GA1BD,MA0BO;AACLwB,uBAAmBxB,GAAnB,EAAwBnB,KAAxB;AACD;;AAED,SAAOA,KAAP;AACD;;AAED,SAAS2C,kBAAT,CAA4BxB,GAA5B,EAAiCnB,KAAjC,EAAwC;AACtC,MAAI,CAAC,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,IAA6B,CAACA,KAA/B,KAAyC,OAAOA,KAAP,KAAiB,QAA1D,IAAsE,OAAOA,KAAP,KAAiB,UAA3F,EAAuG;AACrG,UAAM,IAAI0B,KAAJ,CAAazB,IAAIkB,GAAJ,CAAb,yCAAN;AACD;;AAED,SAAOnB,KAAP;AACD","file":"option-assertions.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.msg = msg;\nexports.access = access;\nexports.assertRootMode = assertRootMode;\nexports.assertSourceMaps = assertSourceMaps;\nexports.assertCompact = assertCompact;\nexports.assertSourceType = assertSourceType;\nexports.assertCallerMetadata = assertCallerMetadata;\nexports.assertInputSourceMap = assertInputSourceMap;\nexports.assertString = assertString;\nexports.assertFunction = assertFunction;\nexports.assertBoolean = assertBoolean;\nexports.assertObject = assertObject;\nexports.assertArray = assertArray;\nexports.assertIgnoreList = assertIgnoreList;\nexports.assertConfigApplicableTest = assertConfigApplicableTest;\nexports.assertConfigFileSearch = assertConfigFileSearch;\nexports.assertBabelrcSearch = assertBabelrcSearch;\nexports.assertPluginList = assertPluginList;\n\nfunction msg(loc) {\n  switch (loc.type) {\n    case \"root\":\n      return ``;\n\n    case \"env\":\n      return `${msg(loc.parent)}.env[\"${loc.name}\"]`;\n\n    case \"overrides\":\n      return `${msg(loc.parent)}.overrides[${loc.index}]`;\n\n    case \"option\":\n      return `${msg(loc.parent)}.${loc.name}`;\n\n    case \"access\":\n      return `${msg(loc.parent)}[${JSON.stringify(loc.name)}]`;\n\n    default:\n      throw new Error(`Assertion failure: Unknown type ${loc.type}`);\n  }\n}\n\nfunction access(loc, name) {\n  return {\n    type: \"access\",\n    name,\n    parent: loc\n  };\n}\n\nfunction assertRootMode(loc, value) {\n  if (value !== undefined && value !== \"root\" && value !== \"upward\" && value !== \"upward-optional\") {\n    throw new Error(`${msg(loc)} must be a \"root\", \"upward\", \"upward-optional\" or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertSourceMaps(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && value !== \"inline\" && value !== \"both\") {\n    throw new Error(`${msg(loc)} must be a boolean, \"inline\", \"both\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertCompact(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && value !== \"auto\") {\n    throw new Error(`${msg(loc)} must be a boolean, \"auto\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertSourceType(loc, value) {\n  if (value !== undefined && value !== \"module\" && value !== \"script\" && value !== \"unambiguous\") {\n    throw new Error(`${msg(loc)} must be \"module\", \"script\", \"unambiguous\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertCallerMetadata(loc, value) {\n  const obj = assertObject(loc, value);\n\n  if (obj) {\n    if (typeof obj[\"name\"] !== \"string\") {\n      throw new Error(`${msg(loc)} set but does not contain \"name\" property string`);\n    }\n\n    for (const prop of Object.keys(obj)) {\n      const propLoc = access(loc, prop);\n      const value = obj[prop];\n\n      if (value != null && typeof value !== \"boolean\" && typeof value !== \"string\" && typeof value !== \"number\") {\n        throw new Error(`${msg(propLoc)} must be null, undefined, a boolean, a string, or a number.`);\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction assertInputSourceMap(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && (typeof value !== \"object\" || !value)) {\n    throw new Error(`${msg(loc)} must be a boolean, object, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertString(loc, value) {\n  if (value !== undefined && typeof value !== \"string\") {\n    throw new Error(`${msg(loc)} must be a string, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertFunction(loc, value) {\n  if (value !== undefined && typeof value !== \"function\") {\n    throw new Error(`${msg(loc)} must be a function, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertBoolean(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\") {\n    throw new Error(`${msg(loc)} must be a boolean, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertObject(loc, value) {\n  if (value !== undefined && (typeof value !== \"object\" || Array.isArray(value) || !value)) {\n    throw new Error(`${msg(loc)} must be an object, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertArray(loc, value) {\n  if (value != null && !Array.isArray(value)) {\n    throw new Error(`${msg(loc)} must be an array, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertIgnoreList(loc, value) {\n  const arr = assertArray(loc, value);\n\n  if (arr) {\n    arr.forEach((item, i) => assertIgnoreItem(access(loc, i), item));\n  }\n\n  return arr;\n}\n\nfunction assertIgnoreItem(loc, value) {\n  if (typeof value !== \"string\" && typeof value !== \"function\" && !(value instanceof RegExp)) {\n    throw new Error(`${msg(loc)} must be an array of string/Funtion/RegExp values, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertConfigApplicableTest(loc, value) {\n  if (value === undefined) return value;\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(`${msg(loc)} must be a string/Function/RegExp, or an array of those`);\n  }\n\n  return value;\n}\n\nfunction checkValidTest(value) {\n  return typeof value === \"string\" || typeof value === \"function\" || value instanceof RegExp;\n}\n\nfunction assertConfigFileSearch(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && typeof value !== \"string\") {\n    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string, ` + `got ${JSON.stringify(value)}`);\n  }\n\n  return value;\n}\n\nfunction assertBabelrcSearch(loc, value) {\n  if (value === undefined || typeof value === \"boolean\") return value;\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string/Function/RegExp ` + `or an array of those, got ${JSON.stringify(value)}`);\n  }\n\n  return value;\n}\n\nfunction assertPluginList(loc, value) {\n  const arr = assertArray(loc, value);\n\n  if (arr) {\n    arr.forEach((item, i) => assertPluginItem(access(loc, i), item));\n  }\n\n  return arr;\n}\n\nfunction assertPluginItem(loc, value) {\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      throw new Error(`${msg(loc)} must include an object`);\n    }\n\n    if (value.length > 3) {\n      throw new Error(`${msg(loc)} may only be a two-tuple or three-tuple`);\n    }\n\n    assertPluginTarget(access(loc, 0), value[0]);\n\n    if (value.length > 1) {\n      const opts = value[1];\n\n      if (opts !== undefined && opts !== false && (typeof opts !== \"object\" || Array.isArray(opts))) {\n        throw new Error(`${msg(access(loc, 1))} must be an object, false, or undefined`);\n      }\n    }\n\n    if (value.length === 3) {\n      const name = value[2];\n\n      if (name !== undefined && typeof name !== \"string\") {\n        throw new Error(`${msg(access(loc, 2))} must be a string, or undefined`);\n      }\n    }\n  } else {\n    assertPluginTarget(loc, value);\n  }\n\n  return value;\n}\n\nfunction assertPluginTarget(loc, value) {\n  if ((typeof value !== \"object\" || !value) && typeof value !== \"string\" && typeof value !== \"function\") {\n    throw new Error(`${msg(loc)} must be a string, object, function`);\n  }\n\n  return value;\n}"]}