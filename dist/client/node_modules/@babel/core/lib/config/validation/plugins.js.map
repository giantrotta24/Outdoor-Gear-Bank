{"version":3,"sources":["../../../../../../../../client/node_modules/@babel/core/lib/config/validation/plugins.js"],"names":["Object","defineProperty","exports","value","validatePluginObject","_optionAssertions","require","VALIDATORS","name","assertString","manipulateOptions","assertFunction","pre","post","inherits","visitor","assertVisitorMap","parserOverride","generatorOverride","key","obj","assertObject","keys","forEach","assertVisitorHandler","prop","enter","exit","Error","handler","validator"],"mappings":"AAAA;;;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAIC,oBAAoBC,QAAQ,qBAAR,CAAxB;;AAEA,IAAMC,aAAa;AACjBC,QAAMH,kBAAkBI,YADP;AAEjBC,qBAAmBL,kBAAkBM,cAFpB;AAGjBC,OAAKP,kBAAkBM,cAHN;AAIjBE,QAAMR,kBAAkBM,cAJP;AAKjBG,YAAUT,kBAAkBM,cALX;AAMjBI,WAASC,gBANQ;AAOjBC,kBAAgBZ,kBAAkBM,cAPjB;AAQjBO,qBAAmBb,kBAAkBM;AARpB,CAAnB;;AAWA,SAASK,gBAAT,CAA0BG,GAA1B,EAA+BhB,KAA/B,EAAsC;AACpC,MAAMiB,MAAM,CAAC,GAAGf,kBAAkBgB,YAAtB,EAAoCF,GAApC,EAAyChB,KAAzC,CAAZ;;AAEA,MAAIiB,GAAJ,EAAS;AACPpB,WAAOsB,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyB;AAAA,aAAQC,qBAAqBC,IAArB,EAA2BL,IAAIK,IAAJ,CAA3B,CAAR;AAAA,KAAzB;;AAEA,QAAIL,IAAIM,KAAJ,IAAaN,IAAIO,IAArB,EAA2B;AACzB,YAAM,IAAIC,KAAJ,OAAcT,GAAd,+FAAN;AACD;AACF;;AAED,SAAOC,GAAP;AACD;;AAED,SAASI,oBAAT,CAA8BL,GAA9B,EAAmChB,KAAnC,EAA0C;AACxC,MAAIA,SAAS,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAA9B,EAAwC;AACtCH,WAAOsB,IAAP,CAAYnB,KAAZ,EAAmBoB,OAAnB,CAA2B,mBAAW;AACpC,UAAIM,YAAY,OAAZ,IAAuBA,YAAY,MAAvC,EAA+C;AAC7C,cAAM,IAAID,KAAJ,iBAAuBT,GAAvB,qDAAN;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAI,OAAOhB,KAAP,KAAiB,UAArB,EAAiC;AACtC,UAAM,IAAIyB,KAAJ,iBAAuBT,GAAvB,4BAAN;AACD;;AAED,SAAOhB,KAAP;AACD;;AAED,SAASC,oBAAT,CAA8BgB,GAA9B,EAAmC;AACjCpB,SAAOsB,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyB,eAAO;AAC9B,QAAMO,YAAYvB,WAAWY,GAAX,CAAlB;AACA,QAAIW,SAAJ,EAAeA,UAAUX,GAAV,EAAeC,IAAID,GAAJ,CAAf,EAAf,KAA6C,MAAM,IAAIS,KAAJ,OAAcT,GAAd,qCAAN;AAC9C,GAHD;AAIA,SAAOC,GAAP;AACD","file":"plugins.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validatePluginObject = validatePluginObject;\n\nvar _optionAssertions = require(\"./option-assertions\");\n\nconst VALIDATORS = {\n  name: _optionAssertions.assertString,\n  manipulateOptions: _optionAssertions.assertFunction,\n  pre: _optionAssertions.assertFunction,\n  post: _optionAssertions.assertFunction,\n  inherits: _optionAssertions.assertFunction,\n  visitor: assertVisitorMap,\n  parserOverride: _optionAssertions.assertFunction,\n  generatorOverride: _optionAssertions.assertFunction\n};\n\nfunction assertVisitorMap(key, value) {\n  const obj = (0, _optionAssertions.assertObject)(key, value);\n\n  if (obj) {\n    Object.keys(obj).forEach(prop => assertVisitorHandler(prop, obj[prop]));\n\n    if (obj.enter || obj.exit) {\n      throw new Error(`.${key} cannot contain catch-all \"enter\" or \"exit\" handlers. Please target individual nodes.`);\n    }\n  }\n\n  return obj;\n}\n\nfunction assertVisitorHandler(key, value) {\n  if (value && typeof value === \"object\") {\n    Object.keys(value).forEach(handler => {\n      if (handler !== \"enter\" && handler !== \"exit\") {\n        throw new Error(`.visitor[\"${key}\"] may only have .enter and/or .exit handlers.`);\n      }\n    });\n  } else if (typeof value !== \"function\") {\n    throw new Error(`.visitor[\"${key}\"] must be a function`);\n  }\n\n  return value;\n}\n\nfunction validatePluginObject(obj) {\n  Object.keys(obj).forEach(key => {\n    const validator = VALIDATORS[key];\n    if (validator) validator(key, obj[key]);else throw new Error(`.${key} is not a valid Plugin property`);\n  });\n  return obj;\n}"]}