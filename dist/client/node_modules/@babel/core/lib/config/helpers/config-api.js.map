{"version":3,"sources":["../../../../../../../../client/node_modules/@babel/core/lib/config/helpers/config-api.js"],"names":["Object","defineProperty","exports","value","default","makeAPI","_semver","data","_interopRequireDefault","require","_","_caching","obj","__esModule","cache","env","using","envName","assertSimpleType","Array","isArray","some","entry","Error","caller","cb","version","simple","async","assertVersion","tokTypes","undefined","range","Number","isInteger","satisfies","limit","stackTraceLimit","err","assign","code"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,OAAlB;;AAEA,SAASC,OAAT,GAAmB;AACjB,MAAMC,OAAOC,uBAAuBC,QAAQ,QAAR,CAAvB,CAAb;;AAEAH,YAAU,mBAAY;AACpB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,IAAID,QAAQ,QAAR,CAAR;;AAEA,IAAIE,WAAWF,QAAQ,YAAR,CAAf;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAER,SAASQ,GAAX,EAArC;AAAwD;;AAE/F,SAASP,OAAT,CAAiBS,KAAjB,EAAwB;AACtB,MAAMC,MAAM,SAANA,GAAM;AAAA,WAASD,MAAME,KAAN,CAAY,gBAAQ;AACvC,UAAI,OAAOb,KAAP,KAAiB,WAArB,EAAkC,OAAOI,KAAKU,OAAZ;;AAElC,UAAI,OAAOd,KAAP,KAAiB,UAArB,EAAiC;AAC/B,eAAO,CAAC,GAAGQ,SAASO,gBAAb,EAA+Bf,MAAMI,KAAKU,OAAX,CAA/B,CAAP;AACD;;AAED,UAAI,CAACE,MAAMC,OAAN,CAAcjB,KAAd,CAAL,EAA2BA,QAAQ,CAACA,KAAD,CAAR;AAC3B,aAAOA,MAAMkB,IAAN,CAAW,iBAAS;AACzB,YAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC7B,gBAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,eAAOD,UAAUf,KAAKU,OAAtB;AACD,OANM,CAAP;AAOD,KAfoB,CAAT;AAAA,GAAZ;;AAiBA,MAAMO,SAAS,SAATA,MAAS;AAAA,WAAMV,MAAME,KAAN,CAAY;AAAA,aAAQ,CAAC,GAAGL,SAASO,gBAAb,EAA+BO,GAAGlB,KAAKiB,MAAR,CAA/B,CAAR;AAAA,KAAZ,CAAN;AAAA,GAAf;;AAEA,SAAO;AACLE,aAAShB,EAAEgB,OADN;AAELZ,WAAOA,MAAMa,MAAN,EAFF;AAGLZ,YAHK;AAILa,WAAO;AAAA,aAAM,KAAN;AAAA,KAJF;AAKLJ,kBALK;AAMLK,gCANK;AAOLC,cAAUC;AAPL,GAAP;AASD;;AAED,SAASF,aAAT,CAAuBG,KAAvB,EAA8B;AAC5B,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAI,CAACC,OAAOC,SAAP,CAAiBF,KAAjB,CAAL,EAA8B;AAC5B,YAAM,IAAIT,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAEDS,kBAAYA,KAAZ;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIT,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,MAAIjB,UAAUF,OAAV,CAAkB+B,SAAlB,CAA4BzB,EAAEgB,OAA9B,EAAuCM,KAAvC,CAAJ,EAAmD;AACnD,MAAMI,QAAQb,MAAMc,eAApB;;AAEA,MAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,QAAQ,EAAzC,EAA6C;AAC3Cb,UAAMc,eAAN,GAAwB,EAAxB;AACD;;AAED,MAAMC,MAAM,IAAIf,KAAJ,CAAU,sBAAmBS,KAAnB,kCAAmDtB,EAAEgB,OAArD,sUAAV,CAAZ;;AAEA,MAAI,OAAOU,KAAP,KAAiB,QAArB,EAA+B;AAC7Bb,UAAMc,eAAN,GAAwBD,KAAxB;AACD;;AAED,QAAMpC,OAAOuC,MAAP,CAAcD,GAAd,EAAmB;AACvBE,UAAM,2BADiB;AAEvBd,aAAShB,EAAEgB,OAFY;AAGvBM;AAHuB,GAAnB,CAAN;AAKD","file":"config-api.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = makeAPI;\n\nfunction _semver() {\n  const data = _interopRequireDefault(require(\"semver\"));\n\n  _semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _ = require(\"../../\");\n\nvar _caching = require(\"../caching\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction makeAPI(cache) {\n  const env = value => cache.using(data => {\n    if (typeof value === \"undefined\") return data.envName;\n\n    if (typeof value === \"function\") {\n      return (0, _caching.assertSimpleType)(value(data.envName));\n    }\n\n    if (!Array.isArray(value)) value = [value];\n    return value.some(entry => {\n      if (typeof entry !== \"string\") {\n        throw new Error(\"Unexpected non-string value\");\n      }\n\n      return entry === data.envName;\n    });\n  });\n\n  const caller = cb => cache.using(data => (0, _caching.assertSimpleType)(cb(data.caller)));\n\n  return {\n    version: _.version,\n    cache: cache.simple(),\n    env,\n    async: () => false,\n    caller,\n    assertVersion,\n    tokTypes: undefined\n  };\n}\n\nfunction assertVersion(range) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n\n    range = `^${range}.0.0-0`;\n  }\n\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  if (_semver().default.satisfies(_.version, range)) return;\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    Error.stackTraceLimit = 25;\n  }\n\n  const err = new Error(`Requires Babel \"${range}\", but was loaded with \"${_.version}\". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` + `to see what is calling Babel.`);\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version: _.version,\n    range\n  });\n}"]}