{"version":3,"sources":["../../../../../../../client/node_modules/@babel/core/lib/transformation/plugin-pass.js"],"names":["Object","defineProperty","exports","value","default","PluginPass","file","key","options","_map","Map","opts","cwd","filename","val","set","get","name","versionRange","availableHelper","addHelper","addImport","getModuleName","node","msg","Error","buildCodeFrameError"],"mappings":"AAAA;;;;;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,OAAR,GAAkB,KAAK,CAAvB;;IAEMC,U;AACJ,sBAAYC,IAAZ,EAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;AAAA;;AAC9B,SAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACA,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKK,IAAL,GAAYH,WAAW,EAAvB;AACA,SAAKI,GAAL,GAAWN,KAAKK,IAAL,CAAUC,GAArB;AACA,SAAKC,QAAL,GAAgBP,KAAKK,IAAL,CAAUE,QAA1B;AACD;;;;wBAEGN,G,EAAKO,G,EAAK;AACZ,WAAKL,IAAL,CAAUM,GAAV,CAAcR,GAAd,EAAmBO,GAAnB;AACD;;;wBAEGP,G,EAAK;AACP,aAAO,KAAKE,IAAL,CAAUO,GAAV,CAAcT,GAAd,CAAP;AACD;;;oCAEeU,I,EAAMC,Y,EAAc;AAClC,aAAO,KAAKZ,IAAL,CAAUa,eAAV,CAA0BF,IAA1B,EAAgCC,YAAhC,CAAP;AACD;;;8BAESD,I,EAAM;AACd,aAAO,KAAKX,IAAL,CAAUc,SAAV,CAAoBH,IAApB,CAAP;AACD;;;gCAEW;AACV,aAAO,KAAKX,IAAL,CAAUe,SAAV,EAAP;AACD;;;oCAEe;AACd,aAAO,KAAKf,IAAL,CAAUgB,aAAV,EAAP;AACD;;;wCAEmBC,I,EAAMC,G,EAAKC,K,EAAO;AACpC,aAAO,KAAKnB,IAAL,CAAUoB,mBAAV,CAA8BH,IAA9B,EAAoCC,GAApC,EAAyCC,KAAzC,CAAP;AACD;;;;;;AAIHvB,QAAQE,OAAR,GAAkBC,UAAlB","file":"plugin-pass.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass PluginPass {\n  constructor(file, key, options) {\n    this._map = new Map();\n    this.key = key;\n    this.file = file;\n    this.opts = options || {};\n    this.cwd = file.opts.cwd;\n    this.filename = file.opts.filename;\n  }\n\n  set(key, val) {\n    this._map.set(key, val);\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  availableHelper(name, versionRange) {\n    return this.file.availableHelper(name, versionRange);\n  }\n\n  addHelper(name) {\n    return this.file.addHelper(name);\n  }\n\n  addImport() {\n    return this.file.addImport();\n  }\n\n  getModuleName() {\n    return this.file.getModuleName();\n  }\n\n  buildCodeFrameError(node, msg, Error) {\n    return this.file.buildCodeFrameError(node, msg, Error);\n  }\n\n}\n\nexports.default = PluginPass;"]}