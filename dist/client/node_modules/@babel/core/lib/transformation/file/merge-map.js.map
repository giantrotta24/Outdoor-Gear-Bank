{"version":3,"sources":["../../../../../../../../client/node_modules/@babel/core/lib/transformation/file/merge-map.js"],"names":["Object","defineProperty","exports","value","default","mergeSourceMap","_sourceMap","data","_interopRequireDefault","require","obj","__esModule","inputMap","map","input","buildMappingData","output","mergedGenerator","SourceMapGenerator","sources","_ref","source","content","setSourceContent","path","length","defaultSource","insertedMappings","Map","eachInputGeneratedRange","generated","original","eachOverlappingGeneratedOutputRange","key","makeMappingKey","item","has","set","addMapping","line","column","columnStart","name","values","columnEnd","Infinity","clearItem","result","toJSON","sourceRoot","outputFile","inputGeneratedRange","callback","overlappingOriginal","filterApplicableOriginalRanges","_ref2","mappings","filterSortedArray","outOriginal","_ref3","_ref4","consumer","SourceMapConsumer","assign","last","computeColumnSpans","eachMapping","m","originalLine","get","sourceContentFor","sourceData","originalColumn","mapping","push","allGeneratedPositionsFor","lastColumn","ORIGINAL_ORDER","file","Array","from","findInsertionLocation","array","left","right","mid","Math","floor","i","start","results"],"mappings":"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","file":"merge-map.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSourceMap;\n\nfunction _sourceMap() {\n  const data = _interopRequireDefault(require(\"source-map\"));\n\n  _sourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mergeSourceMap(inputMap, map) {\n  const input = buildMappingData(inputMap);\n  const output = buildMappingData(map);\n  const mergedGenerator = new (_sourceMap().default.SourceMapGenerator)();\n\n  for (const _ref of input.sources) {\n    const {\n      source\n    } = _ref;\n\n    if (typeof source.content === \"string\") {\n      mergedGenerator.setSourceContent(source.path, source.content);\n    }\n  }\n\n  if (output.sources.length === 1) {\n    const defaultSource = output.sources[0];\n    const insertedMappings = new Map();\n    eachInputGeneratedRange(input, (generated, original, source) => {\n      eachOverlappingGeneratedOutputRange(defaultSource, generated, item => {\n        const key = makeMappingKey(item);\n        if (insertedMappings.has(key)) return;\n        insertedMappings.set(key, item);\n        mergedGenerator.addMapping({\n          source: source.path,\n          original: {\n            line: original.line,\n            column: original.columnStart\n          },\n          generated: {\n            line: item.line,\n            column: item.columnStart\n          },\n          name: original.name\n        });\n      });\n    });\n\n    for (const item of insertedMappings.values()) {\n      if (item.columnEnd === Infinity) {\n        continue;\n      }\n\n      const clearItem = {\n        line: item.line,\n        columnStart: item.columnEnd\n      };\n      const key = makeMappingKey(clearItem);\n\n      if (insertedMappings.has(key)) {\n        continue;\n      }\n\n      mergedGenerator.addMapping({\n        generated: {\n          line: clearItem.line,\n          column: clearItem.columnStart\n        }\n      });\n    }\n  }\n\n  const result = mergedGenerator.toJSON();\n\n  if (typeof input.sourceRoot === \"string\") {\n    result.sourceRoot = input.sourceRoot;\n  }\n\n  return result;\n}\n\nfunction makeMappingKey(item) {\n  return `${item.line}/${item.columnStart}`;\n}\n\nfunction eachOverlappingGeneratedOutputRange(outputFile, inputGeneratedRange, callback) {\n  const overlappingOriginal = filterApplicableOriginalRanges(outputFile, inputGeneratedRange);\n\n  for (const _ref2 of overlappingOriginal) {\n    const {\n      generated\n    } = _ref2;\n\n    for (const item of generated) {\n      callback(item);\n    }\n  }\n}\n\nfunction filterApplicableOriginalRanges({\n  mappings\n}, {\n  line,\n  columnStart,\n  columnEnd\n}) {\n  return filterSortedArray(mappings, ({\n    original: outOriginal\n  }) => {\n    if (line > outOriginal.line) return -1;\n    if (line < outOriginal.line) return 1;\n    if (columnStart >= outOriginal.columnEnd) return -1;\n    if (columnEnd <= outOriginal.columnStart) return 1;\n    return 0;\n  });\n}\n\nfunction eachInputGeneratedRange(map, callback) {\n  for (const _ref3 of map.sources) {\n    const {\n      source,\n      mappings\n    } = _ref3;\n\n    for (const _ref4 of mappings) {\n      const {\n        original,\n        generated\n      } = _ref4;\n\n      for (const item of generated) {\n        callback(item, original, source);\n      }\n    }\n  }\n}\n\nfunction buildMappingData(map) {\n  const consumer = new (_sourceMap().default.SourceMapConsumer)(Object.assign({}, map, {\n    sourceRoot: null\n  }));\n  const sources = new Map();\n  const mappings = new Map();\n  let last = null;\n  consumer.computeColumnSpans();\n  consumer.eachMapping(m => {\n    if (m.originalLine === null) return;\n    let source = sources.get(m.source);\n\n    if (!source) {\n      source = {\n        path: m.source,\n        content: consumer.sourceContentFor(m.source, true)\n      };\n      sources.set(m.source, source);\n    }\n\n    let sourceData = mappings.get(source);\n\n    if (!sourceData) {\n      sourceData = {\n        source,\n        mappings: []\n      };\n      mappings.set(source, sourceData);\n    }\n\n    const obj = {\n      line: m.originalLine,\n      columnStart: m.originalColumn,\n      columnEnd: Infinity,\n      name: m.name\n    };\n\n    if (last && last.source === source && last.mapping.line === m.originalLine) {\n      last.mapping.columnEnd = m.originalColumn;\n    }\n\n    last = {\n      source,\n      mapping: obj\n    };\n    sourceData.mappings.push({\n      original: obj,\n      generated: consumer.allGeneratedPositionsFor({\n        source: m.source,\n        line: m.originalLine,\n        column: m.originalColumn\n      }).map(item => ({\n        line: item.line,\n        columnStart: item.column,\n        columnEnd: item.lastColumn + 1\n      }))\n    });\n  }, null, _sourceMap().default.SourceMapConsumer.ORIGINAL_ORDER);\n  return {\n    file: map.file,\n    sourceRoot: map.sourceRoot,\n    sources: Array.from(mappings.values())\n  };\n}\n\nfunction findInsertionLocation(array, callback) {\n  let left = 0;\n  let right = array.length;\n\n  while (left < right) {\n    const mid = Math.floor((left + right) / 2);\n    const item = array[mid];\n    const result = callback(item);\n\n    if (result === 0) {\n      left = mid;\n      break;\n    }\n\n    if (result >= 0) {\n      right = mid;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  let i = left;\n\n  if (i < array.length) {\n    while (i >= 0 && callback(array[i]) >= 0) {\n      i--;\n    }\n\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction filterSortedArray(array, callback) {\n  const start = findInsertionLocation(array, callback);\n  const results = [];\n\n  for (let i = start; i < array.length && callback(array[i]) === 0; i++) {\n    results.push(array[i]);\n  }\n\n  return results;\n}"]}