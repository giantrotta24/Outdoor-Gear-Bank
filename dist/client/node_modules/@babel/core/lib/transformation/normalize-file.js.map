{"version":3,"sources":["../../../../../../../client/node_modules/@babel/core/lib/transformation/normalize-file.js"],"names":["Object","defineProperty","exports","value","default","normalizeFile","_path","data","_interopRequireDefault","require","_debug","_cloneDeep","t","_interopRequireWildcard","_convertSourceMap","_parser","_codeFrame","_file","_missingPluginHelper","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","debug","pluginPasses","options","code","ast","inputMap","inputSourceMap","fromObject","fromSource","removeComments","err","filename","fromMapFileSource","dirname","removeMapFileComments","type","file","Error","parser","parserOpts","highlightCode","results","plugins","plugin","parserOverride","parse","undefined","push","length","then","message","loc","missingPlugin","codeFrame","codeFrameColumns","start","line","column"],"mappings":"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","file":"normalize-file.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeFile;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cloneDeep() {\n  const data = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\n  _cloneDeep = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction t() {\n  const data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _convertSourceMap() {\n  const data = _interopRequireDefault(require(\"convert-source-map\"));\n\n  _convertSourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n\n  _parser = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n\n  _codeFrame = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = _interopRequireDefault(require(\"./file/file\"));\n\nvar _missingPluginHelper = _interopRequireDefault(require(\"./util/missing-plugin-helper\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst debug = (0, _debug().default)(\"babel:transform:file\");\n\nfunction normalizeFile(pluginPasses, options, code, ast) {\n  code = `${code || \"\"}`;\n  let inputMap = null;\n\n  if (options.inputSourceMap !== false) {\n    if (typeof options.inputSourceMap === \"object\") {\n      inputMap = _convertSourceMap().default.fromObject(options.inputSourceMap);\n    }\n\n    if (!inputMap) {\n      try {\n        inputMap = _convertSourceMap().default.fromSource(code);\n\n        if (inputMap) {\n          code = _convertSourceMap().default.removeComments(code);\n        }\n      } catch (err) {\n        debug(\"discarding unknown inline input sourcemap\", err);\n        code = _convertSourceMap().default.removeComments(code);\n      }\n    }\n\n    if (!inputMap) {\n      if (typeof options.filename === \"string\") {\n        try {\n          inputMap = _convertSourceMap().default.fromMapFileSource(code, _path().default.dirname(options.filename));\n\n          if (inputMap) {\n            code = _convertSourceMap().default.removeMapFileComments(code);\n          }\n        } catch (err) {\n          debug(\"discarding unknown file input sourcemap\", err);\n          code = _convertSourceMap().default.removeMapFileComments(code);\n        }\n      } else {\n        debug(\"discarding un-loadable file input sourcemap\");\n        code = _convertSourceMap().default.removeMapFileComments(code);\n      }\n    }\n  }\n\n  if (ast) {\n    if (ast.type === \"Program\") {\n      ast = t().file(ast, [], []);\n    } else if (ast.type !== \"File\") {\n      throw new Error(\"AST root must be a Program or File node\");\n    }\n\n    ast = (0, _cloneDeep().default)(ast);\n  } else {\n    ast = parser(pluginPasses, options, code);\n  }\n\n  return new _file.default(options, {\n    code,\n    ast,\n    inputMap\n  });\n}\n\nfunction parser(pluginPasses, {\n  parserOpts,\n  highlightCode = true,\n  filename = \"unknown\"\n}, code) {\n  try {\n    const results = [];\n\n    for (const plugins of pluginPasses) {\n      for (const plugin of plugins) {\n        const {\n          parserOverride\n        } = plugin;\n\n        if (parserOverride) {\n          const ast = parserOverride(code, parserOpts, _parser().parse);\n          if (ast !== undefined) results.push(ast);\n        }\n      }\n    }\n\n    if (results.length === 0) {\n      return (0, _parser().parse)(code, parserOpts);\n    } else if (results.length === 1) {\n      if (typeof results[0].then === \"function\") {\n        throw new Error(`You appear to be using an async codegen plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n      }\n\n      return results[0];\n    }\n\n    throw new Error(\"More than one plugin attempted to override parsing.\");\n  } catch (err) {\n    if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n      err.message += \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" + \"or sourceType:unambiguous in your Babel config for this file.\";\n    }\n\n    const {\n      loc,\n      missingPlugin\n    } = err;\n\n    if (loc) {\n      const codeFrame = (0, _codeFrame().codeFrameColumns)(code, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      }, {\n        highlightCode\n      });\n\n      if (missingPlugin) {\n        err.message = `${filename}: ` + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);\n      } else {\n        err.message = `${filename}: ${err.message}\\n\\n` + codeFrame;\n      }\n\n      err.code = \"BABEL_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}"]}