"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var PluginPass = function () {
  function PluginPass(file, key, options) {
    _classCallCheck(this, PluginPass);

    this._map = new Map();
    this.key = key;
    this.file = file;
    this.opts = options || {};
    this.cwd = file.opts.cwd;
    this.filename = file.opts.filename;
  }

  _createClass(PluginPass, [{
    key: "set",
    value: function set(key, val) {
      this._map.set(key, val);
    }
  }, {
    key: "get",
    value: function get(key) {
      return this._map.get(key);
    }
  }, {
    key: "availableHelper",
    value: function availableHelper(name, versionRange) {
      return this.file.availableHelper(name, versionRange);
    }
  }, {
    key: "addHelper",
    value: function addHelper(name) {
      return this.file.addHelper(name);
    }
  }, {
    key: "addImport",
    value: function addImport() {
      return this.file.addImport();
    }
  }, {
    key: "getModuleName",
    value: function getModuleName() {
      return this.file.getModuleName();
    }
  }, {
    key: "buildCodeFrameError",
    value: function buildCodeFrameError(node, msg, Error) {
      return this.file.buildCodeFrameError(node, msg, Error);
    }
  }]);

  return PluginPass;
}();

exports.default = PluginPass;
//# sourceMappingURL=plugin-pass.js.map