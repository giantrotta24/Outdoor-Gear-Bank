{"version":3,"sources":["../../../../../../../client/node_modules/@babel/core/lib/transformation/normalize-opts.js"],"names":["Object","defineProperty","exports","value","default","normalizeOptions","_path","data","_interopRequireDefault","require","obj","__esModule","config","options","filename","cwd","filenameRelative","relative","sourceType","inputSourceMap","sourceMaps","moduleRoot","sourceRoot","sourceFileName","basename","comments","compact","opts","assign","parserOpts","extname","plugins","generatorOpts","auxiliaryCommentBefore","auxiliaryCommentAfter","retainLines","shouldPrintComment","minified","passes","plugin","manipulateOptions"],"mappings":"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","file":"normalize-opts.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeOptions;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction normalizeOptions(config) {\n  const {\n    filename,\n    cwd,\n    filenameRelative = typeof filename === \"string\" ? _path().default.relative(cwd, filename) : \"unknown\",\n    sourceType = \"module\",\n    inputSourceMap,\n    sourceMaps = !!inputSourceMap,\n    moduleRoot,\n    sourceRoot = moduleRoot,\n    sourceFileName = _path().default.basename(filenameRelative),\n    comments = true,\n    compact = \"auto\"\n  } = config.options;\n  const opts = config.options;\n  const options = Object.assign({}, opts, {\n    parserOpts: Object.assign({\n      sourceType: _path().default.extname(filenameRelative) === \".mjs\" ? \"module\" : sourceType,\n      sourceFileName: filename,\n      plugins: []\n    }, opts.parserOpts),\n    generatorOpts: Object.assign({\n      filename,\n      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n      retainLines: opts.retainLines,\n      comments,\n      shouldPrintComment: opts.shouldPrintComment,\n      compact,\n      minified: opts.minified,\n      sourceMaps,\n      sourceRoot,\n      sourceFileName\n    }, opts.generatorOpts)\n  });\n\n  for (const plugins of config.passes) {\n    for (const plugin of plugins) {\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(options, options.parserOpts);\n      }\n    }\n  }\n\n  return options;\n}"]}