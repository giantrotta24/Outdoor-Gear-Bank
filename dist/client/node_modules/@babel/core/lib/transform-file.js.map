{"version":3,"sources":["../../../../../../client/node_modules/@babel/core/lib/transform-file.js"],"names":["Object","defineProperty","exports","value","transformFileSync","transformFileAsync","transformFile","_fs","data","_interopRequireDefault","require","_config","_transformation","obj","__esModule","default","filename","opts","callback","options","undefined","assign","process","nextTick","cfg","err","config","readFile","code","runAsync","runSync","readFileSync","Promise","res","rej","result"],"mappings":"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","file":"transform-file.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFileSync = transformFileSync;\nexports.transformFileAsync = transformFileAsync;\nexports.transformFile = void 0;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _transformation = require(\"./transformation\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n({});\n\nconst transformFile = function transformFile(filename, opts, callback) {\n  let options;\n\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (opts == null) {\n    options = {\n      filename\n    };\n  } else if (opts && typeof opts === \"object\") {\n    options = Object.assign({}, opts, {\n      filename\n    });\n  }\n\n  process.nextTick(() => {\n    let cfg;\n\n    try {\n      cfg = (0, _config.default)(options);\n      if (cfg === null) return callback(null, null);\n    } catch (err) {\n      return callback(err);\n    }\n\n    const config = cfg;\n\n    _fs().default.readFile(filename, \"utf8\", function (err, code) {\n      if (err) return callback(err, null);\n      (0, _transformation.runAsync)(config, code, null, callback);\n    });\n  });\n};\n\nexports.transformFile = transformFile;\n\nfunction transformFileSync(filename, opts) {\n  let options;\n\n  if (opts == null) {\n    options = {\n      filename\n    };\n  } else if (opts && typeof opts === \"object\") {\n    options = Object.assign({}, opts, {\n      filename\n    });\n  }\n\n  const config = (0, _config.default)(options);\n  if (config === null) return null;\n  return (0, _transformation.runSync)(config, _fs().default.readFileSync(filename, \"utf8\"));\n}\n\nfunction transformFileAsync(filename, opts) {\n  return new Promise((res, rej) => {\n    transformFile(filename, opts, (err, result) => {\n      if (err == null) res(result);else rej(err);\n    });\n  });\n}"]}