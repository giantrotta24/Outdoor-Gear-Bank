{"version":3,"sources":["../../../../../../client/node_modules/@babel/helper-create-class-features-plugin/lib/fields.js"],"names":["Object","defineProperty","exports","value","buildPrivateNamesMap","buildPrivateNamesNodes","transformPrivateNamesUsage","buildFieldsInitNodes","_core","data","require","_helperReplaceSupers","_interopRequireWildcard","_helperMemberExpressionToFunctions","_interopRequireDefault","_helperOptimiseCallExpression","obj","__esModule","default","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","props","privateNamesMap","Map","prop","isPrivate","isMethod","isProperty","isInstance","node","static","name","id","update","has","scope","generateUidIdentifier","method","kind","getId","setId","methodId","loose","state","initNodes","isStatic","push","template","statement","ast","addHelper","privateNameVisitor","PrivateName","path","parentPath","isMemberExpression","property","handle","Class","body","traverse","privateNameInnerVisitor","skip","visitors","merge","environmentVisitor","privateNameHandlerSpec","memoise","member","count","object","memo","maybeGenerateMemoised","memoiser","receiver","types","cloneNode","classRef","file","helperName","callExpression","args","privateNameHandlerLoose","replaceWith","expression","BASE","REF","PROP","ref","assign","buildPrivateFieldInitLoose","buildUndefinedNode","buildPrivateInstanceFieldInitSpec","buildPrivateStaticFieldInitSpec","buildPrivateMethodInitLoose","privateName","initAdded","buildPrivateInstanceMethodInitSpec","buildPublicFieldInitLoose","computed","expressionStatement","assignmentExpression","memberExpression","isLiteral","buildPublicFieldInitSpec","stringLiteral","buildPrivateStaticMethodInitLoose","buildPrivateMethodDeclaration","getterDeclared","setterDeclared","params","generator","async","methodValue","functionExpression","isGetter","length","isSetter","variableDeclaration","variableDeclarator","thisContextVisitor","ThisExpression","needsClassRef","replaceThisContext","superRef","replacer","methodPath","isLoose","getObjectRef","identifier","replace","staticNodes","instanceNodes","isPublic","isField","replaced","thisExpression","unshift","Error","filter","Boolean","wrapClass","remove","isClassExpression"],"mappings":"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","file":"fields.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPrivateNamesMap = buildPrivateNamesMap;\nexports.buildPrivateNamesNodes = buildPrivateNamesNodes;\nexports.transformPrivateNamesUsage = transformPrivateNamesUsage;\nexports.buildFieldsInitNodes = buildFieldsInitNodes;\n\nfunction _core() {\n  const data = require(\"@babel/core\");\n\n  _core = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperReplaceSupers() {\n  const data = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\n  _helperReplaceSupers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperMemberExpressionToFunctions() {\n  const data = _interopRequireDefault(require(\"@babel/helper-member-expression-to-functions\"));\n\n  _helperMemberExpressionToFunctions = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperOptimiseCallExpression() {\n  const data = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\n  _helperOptimiseCallExpression = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction buildPrivateNamesMap(props) {\n  const privateNamesMap = new Map();\n\n  for (const prop of props) {\n    const isPrivate = prop.isPrivate();\n    const isMethod = !prop.isProperty();\n    const isInstance = !prop.node.static;\n\n    if (isPrivate) {\n      const {\n        name\n      } = prop.node.key.id;\n      const update = privateNamesMap.has(name) ? privateNamesMap.get(name) : {\n        id: prop.scope.generateUidIdentifier(name),\n        static: !isInstance,\n        method: isMethod\n      };\n\n      if (prop.node.kind === \"get\") {\n        update.getId = prop.scope.generateUidIdentifier(`get_${name}`);\n      } else if (prop.node.kind === \"set\") {\n        update.setId = prop.scope.generateUidIdentifier(`set_${name}`);\n      } else if (prop.node.kind === \"method\") {\n        update.methodId = prop.scope.generateUidIdentifier(name);\n      }\n\n      privateNamesMap.set(name, update);\n    }\n  }\n\n  return privateNamesMap;\n}\n\nfunction buildPrivateNamesNodes(privateNamesMap, loose, state) {\n  const initNodes = [];\n\n  for (const [name, value] of privateNamesMap) {\n    const {\n      id,\n      static: isStatic,\n      method: isMethod,\n      getId,\n      setId\n    } = value;\n\n    if (loose) {\n      initNodes.push(_core().template.statement.ast`\n          var ${id} = ${state.addHelper(\"classPrivateFieldLooseKey\")}(\"${name}\")\n        `);\n    } else if (isMethod && !isStatic) {\n      if (getId || setId) {\n        initNodes.push(_core().template.statement.ast`var ${id} = new WeakMap();`);\n      } else {\n        initNodes.push(_core().template.statement.ast`var ${id} = new WeakSet();`);\n      }\n    } else if (!isStatic) {\n      initNodes.push(_core().template.statement.ast`var ${id} = new WeakMap();`);\n    }\n  }\n\n  return initNodes;\n}\n\nconst privateNameVisitor = {\n  PrivateName(path) {\n    const {\n      privateNamesMap\n    } = this;\n    const {\n      node,\n      parentPath\n    } = path;\n    if (!parentPath.isMemberExpression({\n      property: node\n    })) return;\n    if (!privateNamesMap.has(node.id.name)) return;\n    this.handle(parentPath);\n  },\n\n  Class(path) {\n    const {\n      privateNamesMap\n    } = this;\n    const body = path.get(\"body.body\");\n\n    for (const prop of body) {\n      if (!prop.isPrivate()) {\n        continue;\n      }\n\n      if (!privateNamesMap.has(prop.node.key.id.name)) continue;\n      path.traverse(privateNameInnerVisitor, this);\n      path.skip();\n      break;\n    }\n  }\n\n};\n\nconst privateNameInnerVisitor = _core().traverse.visitors.merge([{\n  PrivateName: privateNameVisitor.PrivateName\n}, _helperReplaceSupers().environmentVisitor]);\n\nconst privateNameHandlerSpec = {\n  memoise(member, count) {\n    const {\n      scope\n    } = member;\n    const {\n      object\n    } = member.node;\n    const memo = scope.maybeGenerateMemoised(object);\n\n    if (!memo) {\n      return;\n    }\n\n    this.memoiser.set(object, memo, count);\n  },\n\n  receiver(member) {\n    const {\n      object\n    } = member.node;\n\n    if (this.memoiser.has(object)) {\n      return _core().types.cloneNode(this.memoiser.get(object));\n    }\n\n    return _core().types.cloneNode(object);\n  },\n\n  get(member) {\n    const {\n      classRef,\n      privateNamesMap,\n      file\n    } = this;\n    const {\n      name\n    } = member.node.property.id;\n    const {\n      id,\n      static: isStatic,\n      method: isMethod,\n      methodId,\n      getId,\n      setId\n    } = privateNamesMap.get(name);\n\n    if (isStatic) {\n      const helperName = isMethod ? \"classStaticPrivateMethodGet\" : \"classStaticPrivateFieldSpecGet\";\n      return _core().types.callExpression(file.addHelper(helperName), [this.receiver(member), _core().types.cloneNode(classRef), _core().types.cloneNode(id)]);\n    }\n\n    if (isMethod) {\n      if (getId || setId) {\n        return _core().types.callExpression(file.addHelper(\"classPrivateFieldGet\"), [this.receiver(member), _core().types.cloneNode(id)]);\n      }\n\n      return _core().types.callExpression(file.addHelper(\"classPrivateMethodGet\"), [this.receiver(member), _core().types.cloneNode(id), _core().types.cloneNode(methodId)]);\n    }\n\n    return _core().types.callExpression(file.addHelper(\"classPrivateFieldGet\"), [this.receiver(member), _core().types.cloneNode(id)]);\n  },\n\n  set(member, value) {\n    const {\n      classRef,\n      privateNamesMap,\n      file\n    } = this;\n    const {\n      name\n    } = member.node.property.id;\n    const {\n      id,\n      static: isStatic,\n      method: isMethod,\n      setId\n    } = privateNamesMap.get(name);\n\n    if (isStatic) {\n      const helperName = isMethod ? \"classStaticPrivateMethodSet\" : \"classStaticPrivateFieldSpecSet\";\n      return _core().types.callExpression(file.addHelper(helperName), [this.receiver(member), _core().types.cloneNode(classRef), _core().types.cloneNode(id), value]);\n    }\n\n    if (isMethod) {\n      if (setId) {\n        return _core().types.callExpression(file.addHelper(\"classPrivateFieldSet\"), [this.receiver(member), _core().types.cloneNode(id), value]);\n      }\n\n      return _core().types.callExpression(file.addHelper(\"classPrivateMethodSet\"), []);\n    }\n\n    return _core().types.callExpression(file.addHelper(\"classPrivateFieldSet\"), [this.receiver(member), _core().types.cloneNode(id), value]);\n  },\n\n  call(member, args) {\n    this.memoise(member, 1);\n    return (0, _helperOptimiseCallExpression().default)(this.get(member), this.receiver(member), args);\n  }\n\n};\nconst privateNameHandlerLoose = {\n  handle(member) {\n    const {\n      privateNamesMap,\n      file\n    } = this;\n    const {\n      object\n    } = member.node;\n    const {\n      name\n    } = member.node.property.id;\n    member.replaceWith(_core().template.expression`BASE(REF, PROP)[PROP]`({\n      BASE: file.addHelper(\"classPrivateFieldLooseBase\"),\n      REF: object,\n      PROP: privateNamesMap.get(name).id\n    }));\n  }\n\n};\n\nfunction transformPrivateNamesUsage(ref, path, privateNamesMap, loose, state) {\n  const body = path.get(\"body\");\n\n  if (loose) {\n    body.traverse(privateNameVisitor, Object.assign({\n      privateNamesMap,\n      file: state\n    }, privateNameHandlerLoose));\n  } else {\n    (0, _helperMemberExpressionToFunctions().default)(body, privateNameVisitor, Object.assign({\n      privateNamesMap,\n      classRef: ref,\n      file: state\n    }, privateNameHandlerSpec));\n  }\n}\n\nfunction buildPrivateFieldInitLoose(ref, prop, privateNamesMap) {\n  const {\n    id\n  } = privateNamesMap.get(prop.node.key.id.name);\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().template.statement.ast`\n    Object.defineProperty(${ref}, ${id}, {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ${value}\n    });\n  `;\n}\n\nfunction buildPrivateInstanceFieldInitSpec(ref, prop, privateNamesMap) {\n  const {\n    id\n  } = privateNamesMap.get(prop.node.key.id.name);\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().template.statement.ast`${id}.set(${ref}, {\n    // configurable is always false for private elements\n    // enumerable is always false for private elements\n    writable: true,\n    value: ${value},\n  })`;\n}\n\nfunction buildPrivateStaticFieldInitSpec(prop, privateNamesMap) {\n  const {\n    id\n  } = privateNamesMap.get(prop.node.key.id.name);\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().template.statement.ast`\n    var ${id} = {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ${value}\n    };\n  `;\n}\n\nfunction buildPrivateMethodInitLoose(ref, prop, privateNamesMap) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    methodId,\n    id,\n    getId,\n    setId,\n    initAdded\n  } = privateName;\n  if (initAdded) return;\n\n  if (methodId) {\n    return _core().template.statement.ast`\n        Object.defineProperty(${ref}, ${id}, {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          value: ${methodId.name}\n        });\n      `;\n  }\n\n  if (getId || setId) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      initAdded: true\n    }));\n\n    if (getId && setId) {\n      return _core().template.statement.ast`\n        Object.defineProperty(${ref}, ${id}, {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          get: ${getId.name},\n          set: ${setId.name}\n        });\n      `;\n    } else if (getId && !setId) {\n      return _core().template.statement.ast`\n        Object.defineProperty(${ref}, ${id}, {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          get: ${getId.name}\n        });\n      `;\n    } else if (!getId && setId) {\n      return _core().template.statement.ast`\n        Object.defineProperty(${ref}, ${id}, {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          set: ${setId.name}\n        });\n      `;\n    }\n  }\n}\n\nfunction buildPrivateInstanceMethodInitSpec(ref, prop, privateNamesMap) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    id,\n    getId,\n    setId,\n    initAdded\n  } = privateName;\n  if (initAdded) return;\n\n  if (getId || setId) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      initAdded: true\n    }));\n\n    if (getId && setId) {\n      return _core().template.statement.ast`\n        ${id}.set(${ref}, {\n          get: ${getId.name},\n          set: ${setId.name}\n        });\n      `;\n    } else if (getId && !setId) {\n      return _core().template.statement.ast`\n        ${id}.set(${ref}, {\n          get: ${getId.name}\n        });\n      `;\n    } else if (!getId && setId) {\n      return _core().template.statement.ast`\n        ${id}.set(${ref}, {\n          set: ${setId.name}\n        });\n      `;\n    }\n  }\n\n  return _core().template.statement.ast`${id}.add(${ref})`;\n}\n\nfunction buildPublicFieldInitLoose(ref, prop) {\n  const {\n    key,\n    computed\n  } = prop.node;\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().types.expressionStatement(_core().types.assignmentExpression(\"=\", _core().types.memberExpression(ref, key, computed || _core().types.isLiteral(key)), value));\n}\n\nfunction buildPublicFieldInitSpec(ref, prop, state) {\n  const {\n    key,\n    computed\n  } = prop.node;\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().types.expressionStatement(_core().types.callExpression(state.addHelper(\"defineProperty\"), [ref, computed || _core().types.isLiteral(key) ? key : _core().types.stringLiteral(key.name), value]));\n}\n\nfunction buildPrivateStaticMethodInitLoose(ref, prop, state, privateNamesMap) {\n  const {\n    id,\n    methodId\n  } = privateNamesMap.get(prop.node.key.id.name);\n  return _core().template.statement.ast`\n    Object.defineProperty(${ref}, ${id}, {\n      // configurable is false by default\n      // enumerable is false by default\n      // writable is false by default\n      value: ${methodId.name}\n    });\n  `;\n}\n\nfunction buildPrivateMethodDeclaration(prop, privateNamesMap, loose = false) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    id,\n    methodId,\n    getId,\n    setId,\n    getterDeclared,\n    setterDeclared,\n    static: isStatic\n  } = privateName;\n  const {\n    params,\n    body,\n    generator,\n    async\n  } = prop.node;\n\n  const methodValue = _core().types.functionExpression(methodId, params, body, generator, async);\n\n  const isGetter = getId && !getterDeclared && params.length === 0;\n  const isSetter = setId && !setterDeclared && params.length > 0;\n\n  if (isGetter) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      getterDeclared: true\n    }));\n    return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(getId, methodValue)]);\n  }\n\n  if (isSetter) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      setterDeclared: true\n    }));\n    return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(setId, methodValue)]);\n  }\n\n  if (isStatic && !loose) {\n    return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(id, _core().types.functionExpression(id, params, body, generator, async))]);\n  }\n\n  return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(methodId, methodValue)]);\n}\n\nconst thisContextVisitor = _core().traverse.visitors.merge([{\n  ThisExpression(path, state) {\n    state.needsClassRef = true;\n    path.replaceWith(_core().types.cloneNode(state.classRef));\n  }\n\n}, _helperReplaceSupers().environmentVisitor]);\n\nfunction replaceThisContext(path, ref, superRef, file, loose) {\n  const state = {\n    classRef: ref,\n    needsClassRef: false\n  };\n  const replacer = new (_helperReplaceSupers().default)({\n    methodPath: path,\n    isLoose: loose,\n    superRef,\n    file,\n\n    getObjectRef() {\n      state.needsClassRef = true;\n      return path.node.static ? ref : _core().types.memberExpression(ref, _core().types.identifier(\"prototype\"));\n    }\n\n  });\n  replacer.replace();\n\n  if (path.isProperty()) {\n    path.traverse(thisContextVisitor, state);\n  }\n\n  return state.needsClassRef;\n}\n\nfunction buildFieldsInitNodes(ref, superRef, props, privateNamesMap, state, loose) {\n  const staticNodes = [];\n  const instanceNodes = [];\n  let needsClassRef = false;\n\n  for (const prop of props) {\n    const isStatic = prop.node.static;\n    const isInstance = !isStatic;\n    const isPrivate = prop.isPrivate();\n    const isPublic = !isPrivate;\n    const isField = prop.isProperty();\n    const isMethod = !isField;\n\n    if (isStatic || isMethod && isPrivate) {\n      const replaced = replaceThisContext(prop, ref, superRef, state, loose);\n      needsClassRef = needsClassRef || replaced;\n    }\n\n    switch (true) {\n      case isStatic && isPrivate && isField && loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateFieldInitLoose(_core().types.cloneNode(ref), prop, privateNamesMap));\n        break;\n\n      case isStatic && isPrivate && isField && !loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateStaticFieldInitSpec(prop, privateNamesMap));\n        break;\n\n      case isStatic && isPublic && isField && loose:\n        needsClassRef = true;\n        staticNodes.push(buildPublicFieldInitLoose(_core().types.cloneNode(ref), prop));\n        break;\n\n      case isStatic && isPublic && isField && !loose:\n        needsClassRef = true;\n        staticNodes.push(buildPublicFieldInitSpec(_core().types.cloneNode(ref), prop, state));\n        break;\n\n      case isInstance && isPrivate && isField && loose:\n        instanceNodes.push(buildPrivateFieldInitLoose(_core().types.thisExpression(), prop, privateNamesMap));\n        break;\n\n      case isInstance && isPrivate && isField && !loose:\n        instanceNodes.push(buildPrivateInstanceFieldInitSpec(_core().types.thisExpression(), prop, privateNamesMap));\n        break;\n\n      case isInstance && isPrivate && isMethod && loose:\n        instanceNodes.unshift(buildPrivateMethodInitLoose(_core().types.thisExpression(), prop, privateNamesMap));\n        staticNodes.push(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        break;\n\n      case isInstance && isPrivate && isMethod && !loose:\n        instanceNodes.unshift(buildPrivateInstanceMethodInitSpec(_core().types.thisExpression(), prop, privateNamesMap));\n        staticNodes.push(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        break;\n\n      case isStatic && isPrivate && isMethod && !loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        break;\n\n      case isStatic && isPrivate && isMethod && loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        staticNodes.push(buildPrivateStaticMethodInitLoose(_core().types.cloneNode(ref), prop, state, privateNamesMap));\n        break;\n\n      case isInstance && isPublic && isField && loose:\n        instanceNodes.push(buildPublicFieldInitLoose(_core().types.thisExpression(), prop));\n        break;\n\n      case isInstance && isPublic && isField && !loose:\n        instanceNodes.push(buildPublicFieldInitSpec(_core().types.thisExpression(), prop, state));\n        break;\n\n      default:\n        throw new Error(\"Unreachable.\");\n    }\n  }\n\n  return {\n    staticNodes,\n    instanceNodes: instanceNodes.filter(Boolean),\n\n    wrapClass(path) {\n      for (const prop of props) {\n        prop.remove();\n      }\n\n      if (!needsClassRef) return path;\n\n      if (path.isClassExpression()) {\n        path.scope.push({\n          id: ref\n        });\n        path.replaceWith(_core().types.assignmentExpression(\"=\", _core().types.cloneNode(ref), path.node));\n      } else if (!path.node.id) {\n        path.node.id = ref;\n      }\n\n      return path;\n    }\n\n  };\n}"]}