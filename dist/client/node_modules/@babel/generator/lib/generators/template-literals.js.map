{"version":3,"sources":["../../../../../../../client/node_modules/@babel/generator/lib/generators/template-literals.js"],"names":["Object","defineProperty","exports","value","TaggedTemplateExpression","TemplateElement","TemplateLiteral","node","print","tag","typeParameters","quasi","parent","isFirst","quasis","isLast","length","raw","token","i","expressions"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,wBAAR,GAAmCA,wBAAnC;AACAF,QAAQG,eAAR,GAA0BA,eAA1B;AACAH,QAAQI,eAAR,GAA0BA,eAA1B;;AAEA,SAASF,wBAAT,CAAkCG,IAAlC,EAAwC;AACtC,OAAKC,KAAL,CAAWD,KAAKE,GAAhB,EAAqBF,IAArB;AACA,OAAKC,KAAL,CAAWD,KAAKG,cAAhB,EAAgCH,IAAhC;AACA,OAAKC,KAAL,CAAWD,KAAKI,KAAhB,EAAuBJ,IAAvB;AACD;;AAED,SAASF,eAAT,CAAyBE,IAAzB,EAA+BK,MAA/B,EAAuC;AACrC,MAAMC,UAAUD,OAAOE,MAAP,CAAc,CAAd,MAAqBP,IAArC;AACA,MAAMQ,SAASH,OAAOE,MAAP,CAAcF,OAAOE,MAAP,CAAcE,MAAd,GAAuB,CAArC,MAA4CT,IAA3D;AACA,MAAMJ,QAAQ,CAACU,UAAU,GAAV,GAAgB,GAAjB,IAAwBN,KAAKJ,KAAL,CAAWc,GAAnC,IAA0CF,SAAS,GAAT,GAAe,IAAzD,CAAd;AACA,OAAKG,KAAL,CAAWf,KAAX;AACD;;AAED,SAASG,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,MAAMO,SAASP,KAAKO,MAApB;;AAEA,OAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIL,OAAOE,MAA3B,EAAmCG,GAAnC,EAAwC;AACtC,SAAKX,KAAL,CAAWM,OAAOK,CAAP,CAAX,EAAsBZ,IAAtB;;AAEA,QAAIY,IAAI,CAAJ,GAAQL,OAAOE,MAAnB,EAA2B;AACzB,WAAKR,KAAL,CAAWD,KAAKa,WAAL,CAAiBD,CAAjB,CAAX,EAAgCZ,IAAhC;AACD;AACF;AACF","file":"template-literals.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateElement = TemplateElement;\nexports.TemplateLiteral = TemplateLiteral;\n\nfunction TaggedTemplateExpression(node) {\n  this.print(node.tag, node);\n  this.print(node.typeParameters, node);\n  this.print(node.quasi, node);\n}\n\nfunction TemplateElement(node, parent) {\n  const isFirst = parent.quasis[0] === node;\n  const isLast = parent.quasis[parent.quasis.length - 1] === node;\n  const value = (isFirst ? \"`\" : \"}\") + node.value.raw + (isLast ? \"`\" : \"${\");\n  this.token(value);\n}\n\nfunction TemplateLiteral(node) {\n  const quasis = node.quasis;\n\n  for (let i = 0; i < quasis.length; i++) {\n    this.print(quasis[i], node);\n\n    if (i + 1 < quasis.length) {\n      this.print(node.expressions[i], node);\n    }\n  }\n}"]}